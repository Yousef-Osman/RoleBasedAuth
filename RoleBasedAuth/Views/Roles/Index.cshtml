@model IEnumerable<IdentityRole>;

@{
    ViewData["Title"] = "Index";
    var roleModel = new RoleVM();
}

<partial name="_ResultAlerts"/>

<section class="col-md-8 mx-auto">
    <div class="card shadow p-5 mt-5">
        <div class="d-flex mb-3">
            <h4 class="me-auto text-dimgrey">User Roles</h4>
            <a class="btn btn-primary align-self-start" data-bs-toggle="modal" data-bs-target="#add-role-modal"><i class="fa-solid fa-plus"></i></a>
            @*<a class="btn btn-primary align-self-start" asp-action="AddRole"><i class="fa-solid fa-plus"></i></a>*@
        </div>
        <ul class="list-group">
            @foreach (var role in Model)
            {
                <li class="list-group-item">
                    <div class="d-flex justify-content-between align-content-center my-1">
                        <p class="mb-0 align-self-center">@role.Name</p>
                        <a asp-action="EditRole" asp-route-id="@role.Id" class="btn btn-warning"><i class="fas fa-edit text-white"></i></a>
                    </div>
                </li>
            }
        </ul>
        <a asp-controller="Admin" asp-action="Index" class="btn btn-outline-secondary mt-3 px-3 ms-auto">Back</a>
    </div>
</section>

<div class="modal fade" id="add-role-modal" tabindex="-1" aria-hidden="true">
    <partial name="_AddRolePartial" model="new RoleVM()" />
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener("DOMContentLoaded", function (event) {
            const addRoleModal = new bootstrap.Modal(document.getElementById('add-role-modal'));
            const successAlert = document.getElementById('success-alert');
            const dangerAlert = document.getElementById('danger-alert');

            document.getElementById('add-form').onsubmit = function (e) {
                document.getElementById('add-validation-result').innerHTML = '';

                if (!$(this).valid())
                    return;

                e.preventDefault();
                var form = new FormData(e.target);

                fetch('/Roles/AddRole', {
                    method: 'Post',
                    credentials: 'include',
                    body: form,
                }).then(response => {
                    if (!response.ok) {
                        throw new Error(response.status);
                    }

                    return response.json();
                }).then(data => {
                    if (data.isSuccess) {
                        addRoleModal.hide();
                        successAlert.hidden = false;
                        setTimeout(function () { successAlert.hidden = true; }, 3000);
                        e.target.reset();
                    } else {
                        displayValidationError(data.errors, 'add-validation-result');
                    }
                }).catch(error => {
                    addRoleModal.hide();
                    dangerAlert.hidden = false;
                    setTimeout(function () { dangerAlert.hidden = true; }, 3000);
                });

                function displayValidationError(errors, element) {
                    let validationDiv = document.getElementById(element);
                    errors.forEach(error => {
                        validationDiv.innerHTML += `<li>${error}</li>`;
                    });
                };


                document.getElementById('cancel-add-btn').onclick = function (e) {
                    document.getElementById('add-form').reset();
                };
            };
        });
    </script>
}